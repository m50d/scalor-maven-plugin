<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- Use parent configuration. -->
    <parent>
        <groupId>com.carrotgarden.a</groupId>
        <artifactId>carrot-a</artifactId>
        <version>0-SNAPSHOT</version>
    </parent>

    <groupId>com.carrotgarden.maven</groupId>
    <artifactId>scalor-maven-plugin-test-any</artifactId>
    <version>${revision}</version>

    <properties>

        <version.supersafe>1.1.3</version.supersafe>

    </properties>

    <!-- Verify custom repository compiler plugin resolution. -->
    <repositories>
        <repository>
            <id>artima</id>
            <url>http://repo.artima.com/releases</url>
        </repository>
    </repositories>

    <dependencies>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scala-js</groupId>
            <artifactId>scalajs-library_${version.scala.epoch}</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>

                <!-- <groupId>@project.groupId@</groupId> -->
                <!-- <artifactId>@project.artifactId@</artifactId> -->
                <!-- <version>@project.version@</version> -->

                <groupId>com.carrotgarden.maven</groupId>
                <artifactId>scalor-maven-plugin_2.12</artifactId>
                <!-- <version>LATEST</version> -->


                <!-- Activate full Scalor life cycle. -->
                <extensions>true</extensions>

                <configuration>

                    <!-- Remove select executions form life cycle. -->
                    <skipLinker>true</skipLinker>
                    <skipReport>true</skipReport>
                    <skipEnvProv>true</skipEnvProv>
                    <skipEnvConf>true</skipEnvConf>

                    <!-- Show source files for compile and scaladoc. -->
                    <zincLogSourcesList>true</zincLogSourcesList>

                    <!-- Verify scaladoc exclusion. -->
                    <scaladocRegexScalaExclude>.*Skip.scala</scaladocRegexScalaExclude>

                    <defineBridge>
                        <dependency>
                            <groupId>org.scala-sbt</groupId>
                            <artifactId>compiler-bridge_${version.scala.epoch}</artifactId>
                            <version>${version.scala.zinc}</version>
                        </dependency>
                    </defineBridge>
                    <defineCompiler>
                        <dependency>
                            <groupId>org.scala-lang</groupId>
                            <artifactId>scala-compiler</artifactId>
                            <version>${version.scala.release}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>jline</groupId>
                                    <artifactId>jline</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                    </defineCompiler>
                    <definePluginList>
                        <!-- Verify duplicate plugin definition. -->
                        <dependency>
                            <groupId>org.scalamacros</groupId>
                            <artifactId>paradise_${version.scala.release}</artifactId>
                            <version>${version.scala.plugin.macro}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.scalamacros</groupId>
                            <artifactId>paradise_${version.scala.release}</artifactId>
                            <version>${version.scala.plugin.macro}</version>
                        </dependency>
                        <!-- Verify dependency w/o sources. -->
                        <dependency>
                            <groupId>com.artima.supersafe</groupId>
                            <artifactId>supersafe_${version.scala.release}</artifactId>
                            <version>${version.supersafe}</version>
                        </dependency>
                        <!-- Verify special artifact id pattern. -->
                        <dependency>
                            <groupId>org.spire-math</groupId>
                            <artifactId>kind-projector_${version.scala.epoch}</artifactId>
                            <version>0.9.6</version>
                        </dependency>
                    </definePluginList>

                </configuration>

            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <activation>
                <property>
                    <name>scalor.maven.invoker</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.carrotgarden.maven</groupId>
                        <artifactId>scalor-maven-plugin_2.12</artifactId>
                        <version>@project.version@</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
